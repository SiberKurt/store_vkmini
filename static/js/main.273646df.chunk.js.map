{"version":3,"sources":["App.js","index.js"],"names":["connect","send","App","state","message","updateMessage","bind","activePanel","id","top","before","size","this","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mjBAiBAA,IAAQC,KAAK,yBAA0B,I,IA8DxBC,E,YA1DV,aAAc,IAAD,8BACN,+CACKC,MAAQ,CACTC,QAAS,2BAEb,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBALf,E,6EAUFN,IAAQC,KAAK,yBAA0B,M,+BAI/C,OACI,kBAAC,IAAD,CAAMM,YAAY,aACd,kBAAC,IAAD,CAAOC,GAAG,aACN,kBAAC,IAAD,iBACA,kBAAC,IAAD,KACI,kBAAC,IAAD,qBAIE,kBAAC,IAAD,KACZ,kBAAC,IAAD,CAAMC,IAAI,2GAAsBC,OAAQ,kBAAC,IAAD,MAAkBC,KAAK,KAA/D,yFACmBC,KAAKT,MAAMC,UAGnB,kBAAC,IAAD,CAAQS,QAASD,KAAKP,eAAtB,mB,GA9BPS,IAAMC,WCVxBf,IAAQC,KAAK,gBAQbe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.273646df.chunk.js","sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';*/\nimport React from 'react';\nimport {Div, Group, Panel, PanelHeader, View,FormLayout,File,Button} from '@vkontakte/vkui';\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport connect from '@vkontakte/vk-connect';\n\n\n\n// Sending method\nconnect.send('VKWebAppOpenCodeReader', {});\n\nclass App extends React.Component {\n\n\t    constructor(){  \n            super();  \n            this.state = {  \n                message: \"my friend (from state)!\"  \n            };  \n            this.updateMessage = this.updateMessage.bind(this);   \n            }\n\n           updateMessage() {  \n                // Sending method\n                connect.send('VKWebAppOpenCodeReader', {}); \n        }\n\n    render() {\n        return (\n            <View activePanel=\"mainPanel\">\n                <Panel id=\"mainPanel\">\n                    <PanelHeader>AscStore</PanelHeader>\n                    <Group>\n                        <Div>\n                            Hello world\n                        </Div>\n                    </Group>\n                          <FormLayout>\n\t\t\t\t\t        \t<File top=\"Загрузите ваше фото\" before={<Icon24Camera />} size=\"l\">\n\t\t\t\t\t          \tОткрыть галерею {this.state.message}\n\t\t\t\t\t        \t</File>\n\t\t\t\t\t      </FormLayout>\n                         <Button onClick={this.updateMessage}>Click me!</Button>\n                </Panel>\n            </View>\n        );\n    }\n    \n/*    datacode=''\n\nconnect.subscribe(event => {\n  if (!event.detail) {\n    return;\n  }\n\n  const { type, data } = event.detail;\n\n  if (type === 'VKWebAppOpenCodeReaderResult') {\n    // Reading result of the Code Reader\n      datacode=data.code_data\n    console.log(data.code_data);\n  }\n\n  if (type === 'VKWebAppOpenCodeReaderFailed') {\n    // Catching the error\n      datacode=data.error_data\n    console.log(data.error_type, data.error_data);\n  }\n});*/\n\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n//import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n//registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}